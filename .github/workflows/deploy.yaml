name: Deploy
on:
    push:
        branches:
            - master
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v1

            - name: Setup Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
              with:
                  install: true

            - name: 'Install OCI CLI'
              run: |
                  mkdir ~/.oci
                  echo "${{ secrets.OCI_CONFIG }}" > ~/.oci/config
                  echo "${{ secrets.OCI_KEY }}" > ~/.oci/oci_api_key.pem
                  curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
                  ls
                  chmod +x ./install.sh
                  ./install.sh --accept-all-defaults
                  echo "/home/runner/bin" >> $GITHUB_PATH
                  exec -l $SHELL
                  oci setup repair-file-permissions --file /home/runner/.oci/config
                  oci setup repair-file-permissions --file /home/runner/.oci/oci_api_key.pem

            - name: 'Install kubectl'
              run: |
                  mkdir /tmp/.kube
                  curl -L -O "https://dl.k8s.io/release/v1.22.4/bin/linux/amd64/kubectl" -o kubectl
                  chmod +x kubectl
                  mv kubectl /usr/local/bin
                  echo "${{ secrets.KUBE_CONFIG }}" > /tmp/.kube/config
                  echo "KUBECONFIG=/tmp/.kube/config" >> $GITHUB_ENV

            - name: 'Currently running services'
              run: |
                  kubectl get pods

            - name: Login to Docker Registry
              uses: docker/login-action@v1
              with:
                  registry: ${{ secrets.DOCKER_SERVER }}
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Available Platforms
              run: echo ${{ steps.buildx.outputs.platforms }}

            - name: Build
              run: |
                  docker build --push --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_SERVER }}/${{ secrets.DOCKER_OBJECT_STORAGE_NAMESPACE }}/ledger-alchemy-ui-microservice:1.2.6 .

            - name: Deploy
              run: |
                  sed -i 's/<DOCKER_OBJECT_STORAGE_NAMESPACE>/${{ secrets.DOCKER_OBJECT_STORAGE_NAMESPACE }}/g' ledger-alchemy-ui.yaml
                  kubectl apply -f ledger-alchemy-ui.yaml

            - name: Restart nginx
              run: |
                  kubectl rollout restart deployment nginx-ingress-ingress-nginx-controller
